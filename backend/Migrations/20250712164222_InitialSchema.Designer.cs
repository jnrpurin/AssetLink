// <auto-generated />
using System;
using InventoryTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryApp.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20250712164222_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("InventoryTracker.Models.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComputerManufacturerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchaseDt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("WarrantyExpirationDt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComputerManufacturerId");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("InventoryTracker.Models.ComputerManufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialRegex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComputerManufacturers");
                });

            modelBuilder.Entity("InventoryTracker.Models.ComputerStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalizedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ComputerStatuses");
                });

            modelBuilder.Entity("InventoryTracker.Models.LnkComputerComputerStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ComputerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComputerStatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("ComputerStatusId");

                    b.ToTable("LnkComputerComputerStatuses");
                });

            modelBuilder.Entity("InventoryTracker.Models.LnkComputerUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AssignEndDt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AssignStartDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ComputerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("UserId");

                    b.ToTable("LnkComputerUsers");
                });

            modelBuilder.Entity("InventoryTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventoryTracker.Models.Computer", b =>
                {
                    b.HasOne("InventoryTracker.Models.ComputerManufacturer", "ComputerManufacturer")
                        .WithMany("Computers")
                        .HasForeignKey("ComputerManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComputerManufacturer");
                });

            modelBuilder.Entity("InventoryTracker.Models.LnkComputerComputerStatus", b =>
                {
                    b.HasOne("InventoryTracker.Models.Computer", "Computer")
                        .WithMany("ComputerStatuses")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTracker.Models.ComputerStatus", "ComputerStatus")
                        .WithMany("ComputerStatuses")
                        .HasForeignKey("ComputerStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("ComputerStatus");
                });

            modelBuilder.Entity("InventoryTracker.Models.LnkComputerUser", b =>
                {
                    b.HasOne("InventoryTracker.Models.Computer", "Computer")
                        .WithMany("ComputerUsers")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryTracker.Models.User", "User")
                        .WithMany("ComputerUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventoryTracker.Models.Computer", b =>
                {
                    b.Navigation("ComputerStatuses");

                    b.Navigation("ComputerUsers");
                });

            modelBuilder.Entity("InventoryTracker.Models.ComputerManufacturer", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("InventoryTracker.Models.ComputerStatus", b =>
                {
                    b.Navigation("ComputerStatuses");
                });

            modelBuilder.Entity("InventoryTracker.Models.User", b =>
                {
                    b.Navigation("ComputerUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
